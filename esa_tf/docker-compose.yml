
version: '3.8'

services:
    esa_tf_scheduler:
        image: daskdev/dask:2021.8.1-py3.9
        ports:
            - "8786:8786"
            - "8787:8787"
        command: dask-scheduler

    esa_tf_restapi:
        image: ${ESA_REGISTRY_PATH:-collaborativedhs}/esa_tf_restapi:${ESA_TF_RELEASE:-latest}
        ports:
            - "8000:8000"
        command: make serve PORT=8000 SCHEDULER="tcp://esa_tf_scheduler:8786"
        volumes:
            - "${CONFIG_DIR:-./config}:/config"
        environment:
            - ESA_TF_CONFIG_FILE=/config/esa_tf.config
            - FORWARDED_ALLOW_IPS=*
            - ROOT_PATH=${ROOT_PATH}

    esa_tf_worker:
        image: ${ESA_REGISTRY_PATH:-collaborativedhs}/esa_tf_worker:${ESA_TF_RELEASE:-latest}
        depends_on:
            - esa_tf_scheduler
        volumes:
            - "${DATA_DIR:-./data}:/data"
            - "${OUTPUT_DIR:-./output}:/output"
            - "${CONFIG_DIR:-./config}:/config"
            - "${PLUGINS_DIR:-./plugins}:/plugins"
        environment:
            - HUBS_CREDENTIALS_FILE=/config/hubs_credentials.yaml
            - OUTPUT_DIR=/output
            - OUTPUT_OWNER_ID=${OUTPUT_OWNER_ID:-0}
        command: >
          sh -c 'pip install /plugins/* &&
                 make dask-worker DASKFLAGS="tcp://esa_tf_scheduler:8786"'

    esa_tf_proxy:
        image: nginx:1.21.6
        volumes:
            - ./nginx/templates:/etc/nginx/templates
            - ./nginx/njs:/etc/nginx/njs
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - "${LOGS:-./logs}:/var/log/nginx"
            - "${OUTPUT_DIR:-./output}:/usr/share/nginx/html"
        ports:
            - "8080:8080"
        environment:
            - NGINX_HOST=_
            - NGINX_PORT=8080
            - APPLICATION_HOSTNAME=${APPLICATION_HOSTNAME}
            - APPLICATION_PROTO=${APPLICATION_PROTO}
            - OIDC_ACTIVE=${OIDC_ACTIVE}
            - OIDC_ROOT_URL=${OIDC_ROOT_URL}
            - REALM_NAME=${REALM_NAME}
            - CLIENT_ID=${CLIENT_ID}
            - CLIENT_SECRET=${CLIENT_SECRET}
            - KEYCLOAK_HOST_HEADER=${KEYCLOAK_HOST_HEADER}
            - GUARD_ROLE=${GUARD_ROLE}


